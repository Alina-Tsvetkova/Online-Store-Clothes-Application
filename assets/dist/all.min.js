var clothesApp = angular.module('clothesApp', ['ngRoute']);


clothesApp.config(['$routeProvider', '$locationProvider',
    function ($routeProvider, $locationProvider) {
        $routeProvider.when('/start', {
            templateUrl: 'app/components/start/start.html',
            controller: 'clothesAppCtrl'
        }).when('/Women', {
            templateUrl: 'app/components/items/items.html',
            controller: 'clothesAppCtrl'
        }).when('/3_shopping_bag', {
            templateUrl: 'app/components/shopping-bag/shoppingBag.html',
            controller: 'clothesAppCtrl'
        }).when('/Accessories', {
            templateUrl: 'app/components/items/items.html',
            controller: 'clothesAppCtrl'
        }).when('/Men', {
            templateUrl: 'app/components/items/items.html',
            controller: 'clothesAppCtrl'
        }).when('/Handbags', {
            templateUrl: 'app/components/items/items.html',
            controller: 'clothesAppCtrl'
        }).when('/clothes/:clothId', {
            templateUrl: 'app/shared/item-detail/itemDetail.html',
            controller: 'clothesAppCtrl'
        }).when('/order', {
            templateUrl: 'app/shared/form-order/formOrder.html',
            controller: 'clothesAppCtrl'
        }).when('/order-done', {
            templateUrl: 'app/components/shopping-bag/shoppingBag.html',
            controller: 'clothesAppCtrl'
        }).when('/Store Locator', {
            templateUrl: 'app/components/store-locator/storeLocator.html',
            controller: 'clothesAppCtrl'
        }).otherwise({
            redirectTo: '/start'
        });
    }]);


clothesApp.directive('downloadIndexbanners', function () {
    return {
        templateUrl: 'app/components/index-banners/indexBanners.html'
    };
});


clothesApp.controller('clothesAppCtrl', function ($scope, $http) {

});

clothesApp.controller('sortCtrl', function ($scope) {
    $scope.sortItems = function (fieldName) {
        $scope.sortField = undefined;
        $scope.reverse = false;
        if ($scope.sortByPrice == 'cheap') {
            if ($scope.sortField === fieldName) {
                $scope.reverse = !$scope.reverse;
            }
            else {
                $scope.sortField = fieldName;
                $scope.reverse = false;
            }
        }
        if ($scope.sortByPrice == 'expensive') {
            if ($scope.sortField === fieldName) {
                $scope.reverse = !$scope.reverse;
            }
            else {
                $scope.sortField = fieldName;
                $scope.reverse = true;
            }
        }
    };
});

clothesApp.controller('clothDetailCtrl', ['$scope', '$http', '$location', '$routeParams', function ($scope, $http, $location, $routeParams) {
    $scope.showDetailedItemInfo = (function () {
        $scope.clothId = $routeParams.clothId;
        $http.get('clothes.json').success(function ($data) {
            $scope.allItems = $data;
            $scope.item = undefined;
            for (var k = 0; k < $scope.allItems.length; k++) {
                if ($scope.allItems[k]["id"] === $scope.clothId) {
                    $scope.item = $scope.allItems[k];
                    $scope.sizes = $scope.item.sizes;
                    $scope.colors = $scope.item.colors;
                }
            }
        });
    }());
}]);
clothesApp.controller('draggableSliderCtrl', function ($scope) {
    $containerForDrag = $('.additional-items')[0];
    $draggableElem = $('.additionalItemsList')[0];

    $draggableElem.onmousedown = function (e) {
        var elemCoords = getElemCoords($draggableElem);
        var moveonX = e.pageX - elemCoords.left;
        var containerCoords = getElemCoords($containerForDrag);
        document.onmousemove = function (e) {
            var movecoord = e.pageX - moveonX - containerCoords.left;
            var edge = $containerForDrag.offsetWidth - $draggableElem.offsetWidth;
            if (movecoord > edge) {
                movecoord = edge + 40;
            }
            var totalWidth = $('.additional-item')[0].clientWidth * $('.additional-item').length - window.innerWidth;
            if(window.innerWidth > 1300) {
                totalWidth+=65;
            }
            if (movecoord < -totalWidth) {
                movecoord = -totalWidth;
            }
            $draggableElem.style.left = movecoord + 'px';
        };

        document.onmouseup = function () {
            document.onmousemove = null;
        }
    };
    
    $draggableElem.ondragstart = function () {
        return false;
    };

    function getElemCoords(element) {
        var coords = element.getBoundingClientRect();

        return {
            top: coords.top,
            left: coords.left
        }
    }

    (function () {
        $draggableElem.addEventListener("touchstart", function (e) {
            var elemCoords = getElemCoords($draggableElem);
            var moveonX =  e.changedTouches[0].pageX - elemCoords.left; // analogue for touch devices

            var containerCoords = getElemCoords($containerForDrag);
            function touchmover(e) {
                var movecoord =  e.changedTouches[0].pageX - moveonX - containerCoords.left;

                var edge = $containerForDrag.offsetWidth - $draggableElem.offsetWidth;
                if (movecoord > edge) {
                    movecoord = edge + 40;
                }
                var totalWidth = $('.additional-item')[0].clientWidth * $('.additional-item').length - window.innerWidth;
                if(window.innerWidth > 1300) {
                    totalWidth+=65;
                }
                if (movecoord < -totalWidth) {
                    movecoord = -totalWidth;
                }
                $draggableElem.style.left = movecoord + 'px';
            }
            $draggableElem.addEventListener('touchmove', touchmover, false)
        }, false);
    }());

});
clothesApp.controller('renderCartCtrl', function ($scope) {

    $scope.checkIfItemsPresent = function () {
        if ($scope.items.length != 0) {
            $('.no-items-title').css('display', 'none');
        }
        if (window.location.hash == '#/order-done') {
            $('.thankful-title').css('display', 'block');
            $('.no-items-title').css('display', 'none');
        }
    };

    $scope.renderCart = (function () {
        $scope.allItems = sessionStorage;
        $scope.items = [];
        $scope.totalSum = 0;
        $scope.totalItemsQuantity = 0;
        for (var k = 0; k < sessionStorage.length; k++) {
            var key = sessionStorage.key(k);

            var item = JSON.parse(sessionStorage.getItem(key));
            if (!(sessionStorage.getItem(key))) {
                return;
            }
            $scope.items.push(item);
            $scope.quantityOfItems = $scope.items.length;
            $scope.totalSum += Number(item.price) * $scope.items[k].quantity;
            $scope.totalItemsQuantity += $scope.items[k].quantity;
        }

        $scope.checkIfItemsPresent();

    }());

    $scope.orderCart = function () {
        if ($scope.items.length == 0) {
            return;
        }
        else {
            window.location.hash = '/order';
        }
    }
});

clothesApp.controller('removeFromCartCtrl', function ($scope, $route) {
    $scope.removeItemFromCart = function ($key) {
        sessionStorage.removeItem($key);
        $route.reload();
    };

    $scope.emptyBag = function () {
        sessionStorage.clear();
        $route.reload();
    };
});



clothesApp.controller('sliderCtrl', function ($scope) {
    $scope.slide = function ($num) {
        $sliderGallery = $('.gallery')[0];
        $sliderGallery.style.transitionDuration = '1s';
        $sliderGallery.style.marginLeft = -( $('.slide')[0].clientWidth) * $num - 40 + 'px';
    }
});

clothesApp.directive('downloadSlider', function () {
    return {
        templateUrl: 'app/components/slider/slider.html'
    };
});
clothesApp.directive('downloadBanners', function () {
    return {
        templateUrl: 'app/shared/banners/banners.html'
    };
});

var uniqueItems = function (data, key) {
    var result = new Array();
    for (var i = 0; i < data.length; i++) {
        var value = data[i][key];

        if (result.indexOf(value) == -1) {
            result.push(value);
        }

    }
    return result;
};

clothesApp.controller('filterCtrl', function ($scope, $http, filterFilter) {

    $scope.initializeContForFilters = (function () {
        $scope.selectedStyles = {};
        $scope.selectedTypes = {};
        $scope.selectedColors = {};
        $scope.selectedBrands = {};
        $scope.selectedSizes = {};
        $scope.selectedPrices = {};
        $scope.items = [];
    }());

    $scope.getData = (function () {
        $http.get('clothes.json').success(function ($data) {
            $scope.allItems = $data;
            $scope.womanClothesRender = [];
            $scope.accessoriesRender = [];
            $scope.handbagsRender = [];
            $scope.menRender = [];
            $scope.itemsArr = [];
            $scope.items = [];

            for (var i = 0; i < $scope.allItems.length; i++) {
                if ($scope.allItems[i]["category"] === "clothes") {
                    $scope.womanClothesRender.push($scope.allItems[i]);
                }
                else if ($scope.allItems[i]["category"] === "accessories") {
                    $scope.accessoriesRender.push($scope.allItems[i]);
                    $scope.itemsArr = $scope.accessoriesRender.slice();
                }
                else if ($scope.allItems[i]["category"] === "bag") {
                    $scope.handbagsRender.push($scope.allItems[i]);
                    $scope.itemsArr = $scope.handbagsRender.slice();
                }
                else if ($scope.allItems[i]["category"] === "men") {
                    $scope.menRender.push($scope.allItems[i]);
                    $scope.itemsArr = $scope.menRender.slice();
                }
            }

            if (window.location.hash === '#/Handbags') {
                $scope.itemsArr = $scope.handbagsRender.slice();
                $scope.items = $scope.handbagsRender.slice();
            }
            else if (window.location.hash === '#/Men') {
                $scope.itemsArr = $scope.menRender.slice();
                $scope.items = $scope.menRender.slice();
            }
            else if (window.location.hash === '#/Accessories') {
                $scope.itemsArr = $scope.accessoriesRender.slice();
                $scope.items = $scope.accessoriesRender.slice();
            }
            else if (window.location.hash === '#/Women') {
                $scope.itemsArr = $scope.womanClothesRender.slice();
                $scope.items = $scope.womanClothesRender.slice();
            }
        });
    }());


    $scope.$watch(function () {
        return {
            items: $scope.items,
            selectedStyles: $scope.selectedStyles,
            selectedTypes: $scope.selectedTypes,
            selectedColors: $scope.selectedColors,
            selectedBrands: $scope.selectedBrands,
            selectedSizes: $scope.selectedSizes,
            selectedPrices: $scope.selectedPrices
        }
    }, function (value) {
        var selected;

        $scope.stylesGroup = uniqueItems($scope.items, 'styles');
        var filteredStyles = [];
        selected = false;
        for (var j in $scope.items) {
            var p = $scope.items[j];
            for (var i in $scope.selectedStyles) {
                if ($scope.selectedStyles[i]) {
                    selected = true;
                    if (i == p.styles) {
                        filteredStyles.push(p);
                        break;
                    }
                }
            }
        }
        if (!selected) {
            filteredStyles = $scope.items;
        }

        $scope.typesGroup = uniqueItems(filteredStyles, 'types');
        var filteredTypes = [];
        selected = false;
        for (var j in filteredStyles) {
            var p = filteredStyles[j];
            for (var i in $scope.selectedTypes) {
                if ($scope.selectedTypes[i]) {
                    selected = true;
                    if (i == p.types) {
                        filteredTypes.push(p);
                        break;
                    }
                }
            }
        }
        if (!selected) {
            filteredTypes = filteredStyles;
        }


        $scope.pricesGroup = uniqueItems(filteredTypes, 'prices');
        var filteredPrices = [];
        selected = false;
        for (var j in filteredTypes) {
            var p = filteredTypes[j];
            for (var i in $scope.selectedPrices) {
                if ($scope.selectedPrices[i]) {
                    selected = true;
                    if (i == p.prices) {
                        filteredPrices.push(p);
                        break;
                    }
                }
            }
        }
        if (!selected) {
            filteredPrices = filteredTypes;
        }

        $scope.brandsGroup = uniqueItems(filteredPrices, 'brands');
        var filteredBrands = [];
        selected = false;
        for (var j in filteredPrices) {
            var p = filteredPrices[j];
            for (var i in $scope.selectedBrands) {
                if ($scope.selectedBrands[i]) {
                    selected = true;
                    if (i == p.brands) {
                        filteredBrands.push(p);
                        break;
                    }
                }
            }
        }
        if (!selected) {
            filteredBrands = filteredPrices;
        }

        $scope.filteredItems = filteredBrands;
        console.log($scope.filteredItems);

    }, true);


    $scope.$watch('filtered', function (newValue) {
        if (angular.isArray(newValue)) {
            console.log(newValue.length);
        }
    }, true);
});

clothesApp.filter('count', function () {
    return function (collection, key) {
        var out = "test";
        for (var i = 0; i < collection.length; i++) {
            //console.log(collection[i].pants);
            //var out = myApp.filter('filter')(collection[i].pants, "42", true);
        }
        return out;
    }
});


clothesApp.filter('groupBy',
    function () {
        return function (collection, key) {
            if (collection === null) return;
            return uniqueItems(collection, key);
        };
    });




clothesApp.controller('createListsCtrl', function ($scope) {
    $scope.createFooter = (function () {
        $scope.footerLists = [
            "Store locator", "Gift cards", "Size guide", "About us", "Support"
        ];
        $scope.footerListsRight = [
            "Custom Service", "Track my Order", "Return policy", "Shopping & delivery", "Contact us", "Careers"
        ];
        $scope.bottomList = [
            "Legal notice", "Privacy policy", "Site map"
        ];
    }());

});



clothesApp.directive('downloadFooter', function () {
    return {
        templateUrl: 'app/shared/footer/footer.html'
    };
});
clothesApp.controller('formOrderCtrl', function ($scope) {
    $scope.submitOrder = function () {
        var allInputs = document.getElementsByClassName('field');
        var count = 0;
        for (var k = 0; k < allInputs.length; k++) {
            if (allInputs[k].value !== '') {
                count++;
            }
        }
        if (count === 3) {
            sessionStorage.clear();
            window.location.hash = '/order-done';

        }
    };
});
clothesApp.controller('addActiveColor', function ($scope) {
    $scope.changeClass = function (value) {
        $scope.classVar = value;
    };
    $scope.myVar = false;
    $scope.toggle = function () {
        $scope.myVar = !$scope.myVar;
    };
});
clothesApp.directive('downloadMenu', function () {
    return {
        templateUrl: 'app/shared/header/header.html'
    };
});
clothesApp.controller('addToCartCtrl', function ($scope) {
    $scope.chooseSize = function ($size) {
        $scope.size = $size;
    };

    $scope.chooseColor = function ($color) {
        $scope.color = $color;
    };

    $scope.addToBag = function ($name, $price, $img, $id, $size, $color, $type, $q) {
        $scope.initializeItemObj = (function () {
            $scope.itemCloth = {};
            $scope.itemCloth.name = $name;
            $scope.itemCloth.price = $price;
            $scope.itemCloth.size = $size;
            $scope.itemCloth.color = $color;
            $scope.itemCloth.img = $img;
            $scope.itemCloth.id = $id + '-' + $color + '-' + $size;
            $scope.itemCloth.quantity = 1;
            $scope.itemCloth.types = $type;
        }());

        $scope.checkOnIDSimilarity = (function () {
            for (var k = 0; k < sessionStorage.length; k++) {
                var key = sessionStorage.key(k);
                var item = JSON.parse(sessionStorage.getItem(key));
                if (item.id == $scope.itemCloth.id) {
                    $scope.itemCloth.quantity = item.quantity;
                    $scope.itemCloth.quantity += $q;
                    sessionStorage.setItem($scope.itemCloth.id, JSON.stringify($scope.itemCloth));
                }
            }
        }());

        $scope.addItemToStorage = (function () {
            sessionStorage.setItem($scope.itemCloth.id, JSON.stringify($scope.itemCloth));
        }());
    }
});

clothesApp.directive('mobileMenu', function () {
    return {
        templateUrl: 'app/shared/mobile-menu/mobile-menu.html'
    };
});
